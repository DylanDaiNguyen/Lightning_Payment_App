const crypto = require('crypto');
const fs = require('fs');
const zlib = require('zlib');

function getCipherKey(password) {
  return crypto.createHash('sha256').update(password).digest();
}

var decrypt = function({ filename, password }) {
  // First, get the initialization vector from the file.
  	var enfile = filename+".enc";
  const readInitVect = fs.createReadStream(enfile, { end: 15 });
	readInitVect.on('error', (err) =>{
		console.log("Wrong ID");
	});
  let initVect;
  readInitVect.on('data', (chunk) => {
    initVect = chunk;
  });
  // Once weâ€™ve got the initialization vector, we can decrypt the file.
  readInitVect.on('end', () => {
	const cipherKey = getCipherKey(password);
	const readStream = fs.createReadStream(enfile, { start: 16 });
	const decipher = crypto.createDecipheriv('aes256', cipherKey, initVect);
	const unzip = zlib.createUnzip();
	const writeStream = fs.createWriteStream(filename + '.json');
	readStream
	  .pipe(decipher)
	  .pipe(unzip)
	  .pipe(writeStream);
  });
}
exports.decrypt = decrypt;